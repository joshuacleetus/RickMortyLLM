name: iOS CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
concurrency:
  group: ios-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build-and-test:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      
      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0'
          
      - name: Show Xcode & Simulators
        run: |
          xcodebuild -version
          xcodebuild -showsdks
          xcrun simctl list devices
          xcodebuild -project RickMortyLLM.xcodeproj -scheme RickMortyLLM -showdestinations || true
          
      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
            ~/.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

          
      - name: Build & Test (Simulator)
        run: |
          set -o pipefail
          # Use the first available iPhone simulator
          DEVICE=$(xcrun simctl list devices iPhone --json | jq -r '.devices | to_entries | map(select(.value | length > 0)) | first | .value | map(select(.isAvailable == true)) | first | .name')
          echo "Using device: $DEVICE"
          xcodebuild \
            -project RickMortyLLM.xcodeproj \
            -scheme RickMortyLLM \
            -destination "platform=iOS Simulator,name=$DEVICE" \
            -derivedDataPath DerivedData \
            -skipPackagePluginValidation \
            -parallel-testing-enabled YES \
            -enableCodeCoverage YES \
            -resultBundlePath TestResults.xcresult \
            clean test
            
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults.xcresult
          path: TestResults.xcresult